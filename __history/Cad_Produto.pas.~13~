unit Cad_Produto;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Data.DB,
  ZAbstractRODataset, ZAbstractDataset, ZDataset, ZAbstractConnection,
  ZConnection, Vcl.Grids, Vcl.DBGrids, Vcl.ImgList, Vcl.DBLookup;

type
  TForm_CadProduto = class(TForm)
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label1: TLabel;
    Label5: TLabel;
    Label7: TLabel;
    Label9: TLabel;
    Edit2: TEdit;
    Edit3: TEdit;
    Edit4: TEdit;
    Edit1: TEdit;
    Edit5: TEdit;
    Edit6: TEdit;
    Edit8: TEdit;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    DBGrid1: TDBGrid;
    ZQuery1: TZQuery;
    DataSource1: TDataSource;
    ImageList1: TImageList;
    ZQuery2: TZQuery;
    procedure Button1Click(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Edit2KeyPress(Sender: TObject; var Key: Char);
    procedure Edit1Exit(Sender: TObject);
    procedure Edit6Exit(Sender: TObject);
    procedure Edit5Exit(Sender: TObject);
    procedure Salvar;
    procedure testar_duplicidade;
  private
    procedure listar;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form_CadProduto: TForm_CadProduto;
  vl:real;
implementation

{$R *.dfm}

uses UDM;
procedure TForm_CadProduto.testar_duplicidade;
var
a:String;
begin
ZQuery2.Close;
ZQuery2.SQL.Clear;
ZQuery2.SQL.Add('SELECT * FROM produto  Where (EAN like '+ Edit2.Text +')');
ZQuery2.Open;

if zquery2.fieldByName ('EAN').value = Edit2.text then
begin
application.MessageBox ('ERRO 009 - Produto já cadastrado', 'ERRO - 004' , MB_ICONWARNING);
Edit2.SetFocus;
 end
 else
 application.MessageBox (' O PRODUTO FOI CADASTRADO COM SUCESSO !', 'PRODUTO CADASTRADOPRODUTO CADASTRADO' , MB_ICONINFORMATION);
 salvar;
end;

procedure TForm_CadProduto.salvar;
begin
ZQuery1.Close;
ZQuery1.SQL.Clear;
ZQuery1.SQL.Add('insert into produto(EAN, unidade, descricao, precodecusto, margemdelucro, estoque, valorfinal)values(:EAN, :unidade, :descricao, :precodecusto, :margemdelucro, :estoque, :valorfinal)');
ZQuery1.ParamByName('EAN').AsString:= Edit2.Text;
ZQuery1.ParamByName('unidade').AsString:= Edit4.Text;
ZQuery1.ParamByName('descricao').AsString:= Edit3.Text;
ZQuery1.ParamByName('precodecusto').AsFloat:= StrToFloat(Edit1.Text);
ZQuery1.ParamByName('margemdelucro').AsInteger:= StrToInt(Edit5.Text);
ZQuery1.ParamByName('valorfinal').AsFloat:= vl;
ZQuery1.ParamByName('estoque').AsFloat:= StrToFloat(Edit8.Text);
ZQuery1.ExecSQL;
listar;

//----------Limpando os Edits depois que os dados foram cadastrados no banco -------------------------------------
edit1.Clear;
edit2.Clear;
edit3.Clear;
edit4.Clear;
edit5.Clear;
edit6.Clear;
edit8.Clear;
Edit2.SetFocus;
end;
procedure TForm_CadProduto.Button2Click(Sender: TObject);
begin
Edit1.Clear;
edit2.Clear;
edit3.Clear;
edit4.Clear;
edit5.Clear;
edit6.Clear;
edit8.Clear;
end;

procedure TForm_CadProduto.Button3Click(Sender: TObject);
begin
Form_CadProduto.Close;
end;

procedure TForm_CadProduto.Edit1Exit(Sender: TObject);
var valor : double;
begin

try
valor:= StrToFloat(StringReplace(Edit1.Text, '.', ',',
                          [rfReplaceAll, rfIgnoreCase]));
except
ShowMessage('Informar valor real');
end;
edit1.text := floattostrf(valor, ffCurrency, 10,2)

end;

procedure TForm_CadProduto.Edit2KeyPress(Sender: TObject; var Key: Char);
begin
if key = #13 then
   Edit3.SetFocus;

end;

procedure TForm_CadProduto.Edit5Exit(Sender: TObject);
begin

Edit1.Text:= StringReplace(Edit1.Text, 'R$', '',
                          [rfReplaceAll, rfIgnoreCase]);
Edit6.Text:= FloatToStr(StrToFloat(Edit1.Text)+(StrToFloat(Edit5.Text)/100) * StrToFloat(Edit1.Text));
vl:= StrToFloat(Edit6.Text);
end;

procedure TForm_CadProduto.Edit6Exit(Sender: TObject);
var valor : double;
begin

try
valor:= StrToFloat(StringReplace(Edit6.Text, '.', ',',
                          [rfReplaceAll, rfIgnoreCase]));
except
ShowMessage('Informar valor real');
end;
edit6.text := floattostrf(valor, ffCurrency, 10,2)

end;

procedure TForm_CadProduto.FormActivate(Sender: TObject);
begin
listar;
end;

procedure TForm_CadProduto.listar;
begin
ZQuery1.Close;
ZQuery1.SQL.Clear;
ZQuery1.SQL.Add('select * from produto');
ZQuery1.Open;
end;

procedure TForm_CadProduto.Button1Click(Sender: TObject);
begin
//----------------testando se campos estão prenchidos---------------------------

    if (Edit2.text = '') then
   begin
   showmessage ('Erro 001 - Preencha o campo Código de barras');
   end;
  if (Edit3.text = '') then
    begin
   showmessage ('Erro 001 - Preencha o campo Descrição');
   end;

   if (Edit4.text = '') then
    begin
   showmessage ('Erro 001 - Preencha o campo Unidade');
   end;
   if (Edit5.text = '') then
    begin
   showmessage ('Erro 001 - Preencha o campo Margem');
   end;

   if (Edit6.text = '') then
    begin
   showmessage ('Erro 001 - Preencha o campo Preço');
   end;

   if (Edit8.text = '') then
    begin
   showmessage ('Preencha o campo Estoque');
   end
  else
   testar_duplicidade;
end;

end.
